{{ define "export_included_fields" }}
    <label class="form-control" for="included-fields" title="Select which fields to include in the export.">
        Included Fields
        <select class="form-control" id="included-fields" name="included_fields" size="10" required multiple>
            <option value="user_id" selected>User ID</option>
            <option value="username" selected>Username</option>
            <option value="display_name" selected>Display Name</option>
            <option value="rsvp_status" selected>RSVP Status</option>
            <option value="event_id" selected>Event ID</option>
            <option value="event_name" selected>Event Name</option>
            <option value="event_url">Event URL</option>
            <option value="event_time">Event Time</option>
            <option value="event_club_id">Event Club ID</option>
            <option value="event_creator_id">Event Creator ID</option>
            <option value="event_creator_username">Event Creator Username</option>
            <option value="event_discord_interested">Event Discord Interested</option>
            <option value="event_created_by_community_ambassador">Event Created by Community Ambassador</option>
            <option value="event_campfire_live_event_id">Event Campfire Live Event ID</option>
            <option value="event_campfire_live_event_name">Event Campfire Live Event Name</option>
        </select>
    </label>
{{ end }}

{{ define "league_progress" }}
    <span class="progress-{{ if eq . 100.0 }}green{{ else if gt . 66.0 }}yellow{{ else if gt . 33.0 }}orange{{ else }}red{{ end }}">
        {{ . }}%
    </span>
{{ end }}

{{ define "checkbox" }}
    {{ if . }}✅️{{ else }}❌{{ end }}
{{ end}}

{{ define "events_filter" }}
    <form id="events-filter" hx-get="{{ .FilterURL }}" hx-params="not quarter" hx-push-url="true" hx-target="body">
        <div class="inline-form-control">
            <div class="inline-form-control">
                <div id="events-filter-range" class="stacked-form-control">
                    <label class="inline-form-control" for="from">
                        From
                        <input type="date" id="from" name="from" hx-on:change="fromChangeHandler()" {{ if not .From.IsZero }}value="{{ formatDate .From }}"{{ end }}>
                    </label>
                    <label class="inline-form-control" for="to">
                        To
                        <input type="date" id="to" name="to" hx-on:change="toChangeHandler()" {{ if not .To.IsZero }}value="{{ formatDate .To }}"{{ end }}>
                    </label>
                </div>
                <div class="stacked-form-control">
                    <label class="form-control" for="only-ca-events">
                        Only CA Events
                        <input type="checkbox" id="only-ca-events" name="only-ca-events" {{ if .OnlyCAEvents }}checked{{ end }}>
                    </label>
                    <label class="form-control" for="event-creator">
                        <select id="event-creator" name="event-creator">
                            <option value="">All Event Creators</option>
                            {{ range $creator := .EventCreators }}
                                <option value="{{ $creator.ID }}" {{ if eq $.SelectedEventCreator $creator.ID }}selected{{ end }}>
                                    {{ $creator.Username }}
                                </option>
                            {{ end }}
                        </select>
                    </label>
                </div>
            </div>

            <div class="stacked-form-control">
                <label for="date-preset">
                    <select id="date-preset" name="quarter" hx-get="/quarter-filters" hx-target="#events-filter-range" hx-swap="outerHTML" hx-select="#events-filter-range" hx-params="*"
                            hx-push-url="false">
                        <option value="">Select Quarter</option>
                        {{ range $quarter := .Quarters }}
                            <option value="{{ $quarter.Value }}">
                                {{ $quarter.Name }}
                            </option>
                        {{ end }}
                    </select>
                </label>
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>
        </div>
    </form>
    <script>
        fromChangeHandler();
        toChangeHandler();

        function fromChangeHandler() {
            console.log("From date changed");
            const fromDate = document.getElementById("from");
            const toDate = document.getElementById("to");

            if (toDate.value && fromDate.value > toDate.value) {
                toDate.value = fromDate.value; // Adjust "to" date if it's earlier than "from" date
            }
            toDate.min = fromDate.value; // Set the minimum value for "to" date
        }

        function toChangeHandler() {
            console.log("To date changed");
            const fromDate = document.getElementById("from");
            const toDate = document.getElementById("to");

            if (fromDate.value && toDate.value < fromDate.value) {
                fromDate.value = toDate.value; // Adjust "from" date if it's later than "to" date
            }
            fromDate.max = toDate.value; // Set the maximum value for "from" date
        }
    </script>
{{ end }}

{{ define "back_button" }}
    <a href="{{ . }}" class="back" hx-boost="true">
        <img src="/static/back.svg" alt="Back">
    </a>
{{ end }}