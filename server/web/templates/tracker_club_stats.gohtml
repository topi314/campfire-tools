{{ template "head" addStr "Tracker - " .ClubName " - Statistics" }}
<div class="container">
    <div class="container-header">
        <a href="/tracker/club/{{ .ClubID }}" class="back">
            <img src="/static/back.svg" alt="Back">
        </a>
        <h1>
            <img src="{{ .ClubAvatarURL }}">
            {{ .ClubName }} Statistics
        </h1>
    </div>

    <div class="section">
        <form id="filterForm" method="GET" action="/tracker/club/{{ .ClubID }}/stats">
            <div class="inline-form-control">
                <div class="stacked-form-control">
                    <label class="inline-form-control" for="from">
                        From
                        <input type="date" id="from" name="from" {{ if not .From.IsZero }}value="{{ formatDate .From }}"{{ end }} max="{{ formatDate now }}">
                    </label>
                    <label class="inline-form-control" for="to">
                        To
                        <input type="date" id="to" name="to" {{ if not .To.IsZero }}value="{{ formatDate .To }}"{{ end }} max="{{ formatDate now }}">
                    </label>
                </div>

                <input type="hidden" name="members" value="{{ .TopMembers.Count }}">
                <input type="hidden" name="events" value="{{ .TopEvents.Count }}">
                <input id="field-members-closed" type="hidden" name="members-closed" value="{{ if .TopMembers.Open }}false{{ else }}true{{ end }}">
                <input id="field-events-closed" type="hidden" name="events-closed" value="{{ if .TopEvents.Open }}false{{ else }}true{{ end }}">
                <input id="field-event-categories-closed" type="hidden" name="event-categories-closed" value="{{ if .EventCategories.Open }}false{{ else }}true{{ end }}">

                <div class="stacked-form-control">
                    <label for="date-preset">
                        <select id="date-preset" onchange="updateDate(this)">
                            <option value="">Select a quarter</option>
                            <option value="q3-2025">Q3 2025</option>
                            <option value="q2-2025">Q2 2025</option>
                            <option value="q1-2025">Q1 2025</option>
                            <option value="q4-2024">Q4 2024</option>
                            <option value="q3-2024">Q3 2024</option>
                            <option value="q2-2024">Q2 2024</option>
                            <option value="q1-2024">Q1 2024</option>
                        </select>
                    </label>
                    <button type="submit" class="btn btn-primary">Filter</button>
                </div>
            </div>
        </form>
    </div>

    <div class="section">
        <div class="section-header">
            <h2>Top Members</h2>
        </div>
        <details ontoggle="toggleParam(this, 'members-closed')" {{ if .TopMembers.Open }}open{{ end }}>
            <summary>
                View Top Members based on check-ins
            </summary>
            <div class="inline-form-control">
                <label for="top-members">
                    <select id="top-members" onchange="updateParam(this, 'members');">
                        {{ range $count := .TopCounts }}
                            <option value="{{ $count }}" {{ if eq $count $.TopMembers.Count }}selected{{ end }}>
                                {{ $count }}
                            </option>
                        {{ end }}
                    </select>
                </label>
            </div>

            <div class="table-5">
                <span>Position</span>
                <span>Member</span>
                <span>Accepted</span>
                <span>Check-Ins</span>
                <span>Rate</span>
                {{ range $index, $member := .TopMembers.Members }}
                    <span>{{ add $index 1 }}</span>
                    <a href="{{ $member.URL }}" title="{{ $member.Username }}">{{ $member.DisplayName }}</a>
                    <span>{{ $member.Accepted }}</span>
                    <span>{{ $member.CheckIns }}</span>
                    <span>{{ $member.CheckInRate }}%</span>
                {{ else }}
                    <span>No members found.</span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                {{ end }}
            </div>
        </details>
    </div>

    <div class="section">
        <div class="section-header">
            <h2>Top Events</h2>
        </div>

        <details ontoggle="toggleParam(this, 'events-closed')" {{ if .TopEvents.Open }}open{{ end }}>
            <summary>
                View top events based on RSVP and check-ins.
            </summary>

            <div class="inline-form-control">
                <label for="top-events">
                    <select id="top-events" onchange="updateParam(this, 'events');">
                        {{ range $count := .TopCounts }}
                            <option value="{{ $count }}" {{ if eq $count $.TopEvents.Count }}selected{{ end }}>
                                {{ $count }}
                            </option>
                        {{ end }}
                    </select>
                </label>
            </div>

            <div class="table-5">
                <span>Position</span>
                <span>Event</span>
                <span>Accepted</span>
                <span>Check-Ins</span>
                <span>Rate</span>
                {{ range $index, $event := .TopEvents.Events }}
                    <span>{{ add $index 1 }}</span>
                    <a href="{{ $event.URL }}">{{ $event.Name }}</a>
                    <span>{{ $event.Accepted }}</span>
                    <span>{{ $event.CheckIns }}</span>
                    <span>{{ $event.CheckInRate }}%</span>
                {{ else }}
                    <span>No events found.</span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                {{ end }}
                {{ if gt .TopEvents.TotalAccepted 0 }}
                    <span></span>
                    <span></span>
                    <span>{{ .TopEvents.TotalAccepted }}</span>
                    <span>{{ .TopEvents.TotalCheckIns }}</span>
                    <span>{{ .TopEvents.TotalCheckInRate }}%</span>
                {{ end }}
            </div>
        </details>
    </div>

    <div class="section">
        <div class="section-header">
            <h2>Event Categories</h2>
        </div>

        <details ontoggle="toggleParam(this, 'event-categories-closed')" {{ if .EventCategories.Open }}open{{ end }}>
            <summary>
                View event categories with their accepted and check-in counts.
            </summary>

            <div class="table-7">
                <span>Position</span>
                <span>Category</span>
                <span>Events</span>
                <span>Accepted</span>
                <span>Check-Ins</span>
                <span>Rate</span>
                <span>Total Rate</span>
                {{ range $index, $category := .EventCategories.Categories }}
                    <span>{{ add $index 1 }}</span>
                    <span>{{ $category.Name }}</span>
                    <span>{{ $category.Events }}</span>
                    <span>{{ $category.Accepted }}</span>
                    <span>{{ $category.CheckIns }}</span>
                    <span>{{ $category.CheckInRate }}%</span>
                    <span>{{ $category.TotalCheckInRate }}%</span>
                {{ else }}
                    <span>No events found.</span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                    <span></span>
                {{ end }}
            </div>
        </details>
    </div>
</div>
<script>
    function updateParam(select, name) {
        const url = new URL(window.location);
        url.searchParams.set(name, select.value);
        window.location = url.toString();
    }

    function toggleParam(element, name) {
        const url = new URL(window.location);
        if (element.open) {
            url.searchParams.delete(name);
        } else {
            url.searchParams.set(name, 'true');
        }

        const field = document.getElementById('field-' + name);
        if (field) {
            field.value = element.open ? 'false' : 'true';
        }

        window.history.replaceState({}, '', url.toString());
    }

    const fromDate = document.getElementById('from');
    const toDate = document.getElementById('to');

    fromDate.addEventListener('change', () => {
        if (toDate.value && fromDate.value > toDate.value) {
            toDate.value = fromDate.value; // Adjust "to" date if it's earlier than "from" date
        }
        toDate.min = fromDate.value; // Set the minimum value for "to" date
    });

    toDate.addEventListener('change', () => {
        if (fromDate.value && toDate.value < fromDate.value) {
            fromDate.value = toDate.value; // Adjust "from" date if it's later than "to" date
        }
        fromDate.max = toDate.value; // Set the maximum value for "from" date
    });

    function updateDate(select) {
        let from;
        let to;

        switch (select.value) {
            case 'q3-2025':
                from = "2025-07-01";
                to = "2025-09-30";
                break;
            case 'q2-2025':
                from = "2025-04-01";
                to = "2025-06-30";
                break;
            case 'q1-2025':
                from = "2025-01-01";
                to = "2025-03-31";
                break;
            case 'q4-2024':
                from = "2024-10-01";
                to = "2024-12-31";
                break;
            case 'q3-2024':
                from = "2024-07-01";
                to = "2024-09-30";
                break;
            case 'q2-2024':
                from = "2024-04-01";
                to = "2024-06-30";
                break;
            case 'q1-2024':
                from = "2024-01-01";
                to = "2024-03-31";
                break;
            default:
                from = "";
                to = "";
        }

        const now = new Date();
        if (from) {
            const fromDate = new Date(from);
            if (fromDate > now) {
                from = now.toISOString().split('T')[0];
            }
        }

        if (to) {
            const toDate = new Date(to);
            if (toDate > now) {
                to = now.toISOString().split('T')[0];
            }
        }

        document.getElementById('from').value = from;
        document.getElementById('to').value = to;
    }
</script>
{{ template "footer" }}
