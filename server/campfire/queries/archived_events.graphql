query ArchivedEvents_Query(
    $clubId: ID!
    $first: Int!
    $after: String
    $membersFirst: Int!
) {
    club(id: $clubId) {
        id
        archivedFeed(first: $first, after: $after) {
            totalCount
            edges {
                node {
                    __typename
                    ... on Event {
                        id
                        name
                        visibility
                        address
                        location
                        coverPhotoUrl
                        mapPreviewUrl
                        details
                        eventTime
                        eventEndTime
                        rsvpStatus
                        createdByCommunityAmbassador
                        badgeGrants
                        topicId
                        discordInterested
                        game
                        creator {
                            id
                            username
                            displayName
                            avatarUrl
                            badges {
                                badgeType
                                alias
                            }
                        }
                        clubId
                        club {
                            id
                            name
                            game
                            visibility
                            amIMember
                            avatarUrl
                            badgeGrants
                            createdByCommunityAmbassador
                            creator {
                                id
                                username
                                displayName
                                avatarUrl
                                badges {
                                    badgeType
                                    alias
                                }
                            }
                        }
                        members(first: $membersFirst) {
                            totalCount
                            edges {
                                node {
                                    id
                                    username
                                    displayName
                                    avatarUrl
                                    badges {
                                        badgeType
                                        alias
                                    }
                                }
                            }
                            pageInfo {
                                hasNextPage
                                startCursor
                                endCursor
                            }
                        }
                        checkedInMembersCount
                        rsvpStatuses {
                            userId
                            rsvpStatus
                        }
                        isPasscodeRewardEligible
                        passcode
                        campfireLiveEventId
                        campfireLiveEvent {
                            id
                            checkInRadiusMeters
                            eventName
                            modalHeadingImageUrl
                        }
                        commentCount
                        isSubscribed
                        commentsPermissions
                        commentsPreview {
                            id
                            body
                            createdAt
                            updatedAt
                            author {
                                id
                                username
                                displayName
                                avatarUrl
                                badges {
                                    badgeType
                                    alias
                                }
                            }
                        }
                    }
                }
                cursor
            }
            pageInfo {
                hasNextPage
                startCursor
                endCursor
            }
        }
    }
}


